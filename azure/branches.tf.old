//############################ Create Branch VNETs  ##################

resource "azurerm_virtual_network" "branches" {
for_each = var.az_branches

  name                = "${var.project}-${var.TAG}-${each.value.name}"
  location            = each.value.location
  resource_group_name = azurerm_resource_group.hubrg.name
  address_space       = [each.value.cidr]

  tags = {
    Project = "${var.project}"
    Role    = "${var.TAG}"
  }
}

//############################ Create Branch Subnets ############################

resource "azurerm_subnet" "brsubnets" {
  for_each = var.az_branchsubnetscidrs

  name                 = each.value.name == "RouteServerSubnet" ? "${each.value.name}" :  "${var.TAG}-${var.project}-subnet-${each.value.name}"
  resource_group_name  = azurerm_resource_group.hubrg.name
  address_prefixes     = [each.value.cidr]
  virtual_network_name = azurerm_virtual_network.branches[each.value.vnet].name

}

//############################  Branch Route Tables ############################
resource "azurerm_route_table" "branchvnet_route_tables" {
  for_each = var.branch_vnetroutetables

  name                = "${var.TAG}-${var.project}-${each.value.name}"
  location            = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  //disable_bgp_route_propagation = false
  tags = {
    Project = "${var.project}"
  }
}


//############################  RT Associations ############################
resource "azurerm_subnet_route_table_association" "brvnet_rt_assoc" {
  for_each = var.branch_vnetroutetables

  subnet_id = azurerm_subnet.brsubnets[each.key].id
  #subnet_id      = data.azurerm_subnet.pub_subnet.id
  route_table_id = azurerm_route_table.branchvnet_route_tables[each.key].id
}



//############################################################################################################################################

//############################  Internal LB ############################

resource "azurerm_public_ip" "branchpip" {
for_each = var.branchpublicip
  name                = "${var.TAG}-${var.project}-${each.value.name}"
  location            = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  allocation_method   = "Static"
  sku = "Standard"

  tags = {
    Project = "${var.project}"
  }

}


resource "azurerm_lb" "branchlb" {
for_each = var.branchlb

  name                = "${var.TAG}-${var.project}-${each.value.name}"
  location            = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  sku                 = "Standard"

    dynamic "frontend_ip_configuration" {
    for_each = [
      for fe_ip in var.brlb_frontend_ip_configurations : fe_ip
      if fe_ip.type == "external"
    ]
    content {
      name                          = brlb_frontend_ip_configurations.value.name
      public_ip_address_id          = var.branchpip[brlb_frontend_ip_configurations.value.frontendip].id
    }
   }

    dynamic "frontend_ip_configuration" {
      for_each = [
        for fe_ip in var.brlb_frontend_ip_configurations : fe_ip
        if fe_ip.type == "internal"
      ]
      content {
        name                          = brlb_frontend_ip_configurations.value.name
        subnet_id                     = azurerm_subnet.brsubnets[brlb_frontend_ip_configurations.value.subnet].id
        private_ip_address            = brlb_frontend_ip_configurations.value.name
        private_ip_address_allocation = "Static"
      }
   }
}

  frontend_ip_configuration {

    name                 = each.value.frontendipname
    //public_ip_address_id = ( each.value.type == "external" ? azurerm_public_ip.branchpip[each.value.frontendip].id : null )

    subnet_id              = ( each.value.type == "internal" ? azurerm_subnet.brsubnets[each.value.subnet].id : null )
    private_ip_address_allocation = ( each.value.type == "internal" ? "Static" : null )
    private_ip_address            = ( each.value.type == "internal" ? each.value.frontendip : null )

  }

  tags = {
    Project = "${var.project}"
  }
}

resource "azurerm_lb_backend_address_pool" "brilbbackend" {
for_each = var.branchlbpools

  resource_group_name = azurerm_resource_group.hubrg.name
  loadbalancer_id     = azurerm_lb.intbranchlb[each.value.lb].id
  name                = each.value.pool
}

resource "azurerm_lb_probe" "brilbprobe" {
for_each = var.intbranchlbprobes

  resource_group_name = azurerm_resource_group.hubrg.name
  loadbalancer_id     = azurerm_lb.intbranchlb[each.value.lb].id
  name                = each.value.name
  port                = each.value.port
}

resource "azurerm_lb_rule" "brilbrules" {
for_each = var.intbranchlbrules

  resource_group_name = azurerm_resource_group.hubrg.name
  loadbalancer_id     = azurerm_lb.intbranchlb[each.value.lb].id

  name                           = each.value.name
  protocol                       = each.value.protocol
  frontend_port                  = each.value.frontendport
  backend_port                   = each.value.backendport

  frontend_ip_configuration_name = each.value.frontendipname
  probe_id                       = azurerm_lb_probe.brilbprobe[each.value.probe].id
  backend_address_pool_id        = azurerm_lb_backend_address_pool.brilbbackend[each.value.pool].id
}





//############################  External LB ############################
/////////////////////////////////////This code is not good

resource "azurerm_lb" "extlbbranch1" {
for_each = var.extbranchlb1
  name                = "${var.TAG}-${var.project}-${each.value.name}"
  location            = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  sku                 = "Standard"

   frontend_ip_configuration {

    name                 = "${var.TAG}-${var.project}-${each.value.name}-ip1"
    public_ip_address_id = ( each.value.type == "external" ? azurerm_public_ip.branchpip[each.value.frontendip1].id : null )

  }
   frontend_ip_configuration {

    name                 = "${var.TAG}-${var.project}-${each.value.name}-ip2"
    public_ip_address_id = ( each.value.type == "external" ? azurerm_public_ip.branchpip[each.value.frontendip2].id : null )
  }  

  tags = {
    Project = "${var.project}"
  }
}

resource "azurerm_lb" "extlbbranch2" {
for_each = var.extbranchlb2
  name                = "${var.TAG}-${var.project}-${each.value.name}"
  location            = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  sku                 = "Standard"

   frontend_ip_configuration {

    name                 = "${var.TAG}-${var.project}-${each.value.name}-ip1"
    public_ip_address_id = ( each.value.type == "external" ? azurerm_public_ip.branchpip[each.value.frontendip1].id : null )

  }
   frontend_ip_configuration {

    name                 = "${var.TAG}-${var.project}-${each.value.name}-ip2"
    public_ip_address_id = ( each.value.type == "external" ? azurerm_public_ip.branchpip[each.value.frontendip2].id : null )
  }  

  tags = {
    Project = "${var.project}"
  }
}



/*
resource "azurerm_lb" "branchlb" {
dynamic "origin" {
for_each = var.branchlb

  name                = "${var.TAG}-${var.project}-${each.value.name}"
  location            = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  sku                 = "Standard"

  dynamic frontend_ip_configuration {
   for_each = origin.value.frontendip
    name                 = "${var.TAG}-${var.project}-${each.value.name}"
    public_ip_address_id = ( origin.value.type == "external" ? azurerm_public_ip.branchpip[each.value.pip].id : null )

    subnet_id              = ( origin.value.type == "internal" ? azurerm_subnet.brsubnets[origin.value.subnet].id : null )
    private_ip_address_allocation = ( origin.value.type== "internal" ? "Static" : null )
    private_ip_address            = ( origin.value.type == "internal" ? each.value.pip: null )

  }

  tags = {
    Project = "${var.project}"
  }

}
}
*/

//############################  FGTs NICs ############################

resource "azurerm_network_interface" "branch1fgt1nic" {
  for_each                      = var.branch1fgt1
  name                          = "${each.value.vnet}-${each.value.vmname}-${each.value.name}"
  location                      = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  enable_ip_forwarding          = true
  enable_accelerated_networking = false

  ip_configuration {
    name      = "ipconfig1"
    subnet_id = azurerm_subnet.brsubnets[each.value.subnet].id
    #subnet_id                     = data.azurerm_subnet.dut1subnetid[each.key].id
    private_ip_address_allocation = "static"
    private_ip_address            = each.value.ip
    //public_ip_address_id          = (each.value.name == "port1" ? azurerm_public_ip.fgt3pip1.id : null)
  }
}
resource "azurerm_network_interface" "branch1fgt2nic" {
  for_each                      = var.branch1fgt2
  name                          = "${each.value.vnet}-${each.value.vmname}-${each.value.name}"
  location                      = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  enable_ip_forwarding          = true
  enable_accelerated_networking = false

  ip_configuration {
    name      = "ipconfig1"
    subnet_id = azurerm_subnet.brsubnets[each.value.subnet].id
    #subnet_id                     = data.azurerm_subnet.dut1subnetid[each.key].id
    private_ip_address_allocation = "static"
    private_ip_address            = each.value.ip
    //public_ip_address_id          = (each.value.name == "port1" ? azurerm_public_ip.fgt3pip1.id : null)
  }
}
resource "azurerm_network_interface" "branch2fgt1nic" {
  for_each                      = var.branch2fgt1
  name                          = "${each.value.vnet}-${each.value.vmname}-${each.value.name}"
  location                      = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  enable_ip_forwarding          = true
  enable_accelerated_networking = false

  ip_configuration {
    name      = "ipconfig1"
    subnet_id = azurerm_subnet.brsubnets[each.value.subnet].id
    #subnet_id                     = data.azurerm_subnet.dut1subnetid[each.key].id
    private_ip_address_allocation = "static"
    private_ip_address            = each.value.ip
    //public_ip_address_id          = (each.value.name == "port1" ? azurerm_public_ip.fgt3pip1.id : null)
  }
}
resource "azurerm_network_interface" "branch2fgt2nic" {
  for_each                      = var.branch2fgt2
  name                          = "${each.value.vnet}-${each.value.vmname}-${each.value.name}"
  location                      = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  enable_ip_forwarding          = true
  enable_accelerated_networking = false

  ip_configuration {
    name      = "ipconfig1"
    subnet_id = azurerm_subnet.brsubnets[each.value.subnet].id
    #subnet_id                     = data.azurerm_subnet.dut1subnetid[each.key].id
    private_ip_address_allocation = "static"
    private_ip_address            = each.value.ip
    //public_ip_address_id          = (each.value.name == "port1" ? azurerm_public_ip.fgt3pip1.id : null)
  }
}

resource "azurerm_network_interface" "branch3fgt1nic" {
  for_each                      = var.branch3fgt1
  name                          = "${each.value.vnet}-${each.value.vmname}-${each.value.name}"
  location                      = azurerm_virtual_network.branches[each.value.vnet].location
  resource_group_name = azurerm_resource_group.hubrg.name
  enable_ip_forwarding          = true
  enable_accelerated_networking = false

  ip_configuration {
    name      = "ipconfig1"
    subnet_id = azurerm_subnet.brsubnets[each.value.subnet].id
    private_ip_address_allocation = "static"
    private_ip_address            = each.value.ip
    //public_ip_address_id          = (each.value.name == "port1" ? azurerm_public_ip.fgt3pip1.id : null)
  }
}

/////////////////////////////////////FGT NIC to AZURE LB POOL Association

resource "azurerm_network_interface_backend_address_pool_association" "branch1fgt1niclb" {
  for_each                      = var.branch1fgt1
  
  network_interface_id    = azurerm_network_interface.branch1fgt1nic[each.key].id
  ip_configuration_name   = "ipconfig1"
  backend_address_pool_id = azurerm_lb_backend_address_pool.elbbackend.id
}

